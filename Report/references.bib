lar framework for emulatin
% BibTeX entries for references





@inproceedings{efficient_virtualization,
  author    = {Steffen Liebergeld},
  title     = {Efficient Virtualization on {ARM} Platforms},
  booktitle = {Proceedings of Technische Universit{\"a}t Dresden, Institut f{\"u}r Systemarchitektur},
  year      = {2009},
  publisher = {Technische Universit{\"a}t Dresden},
  address   = {Dresden, Germany}
}

@inproceedings{partemu,
  author    = {Lee Harrison and Hayawardh Vijayakumar and Rohan Padhye and Koushik Sen and Michael Grace},
  title     = {PartEmu: Enabling Dynamic Analysis of Real-World TrustZone Software Using Emulation},
  booktitle = {29th USENIX Security Symposium},
  year      = {2020},
  pages     = {789--805},
  publisher = {USENIX},
  url       = {https://www.usenix.org/conference/usenixsecurity20/presentation/harrison}
}

@inproceedings{qemu_fast_portable,
  author    = {Fabrice Bellard},
  title     = {QEMU, a Fast and Portable Dynamic Translator},
  booktitle = {Proceedings of the Annual Conference on USENIX Annual Technical Conference},
  year      = {2005},
  publisher = {USENIX Association},
  url       = {https://www.usenix.org/legacy/event/usenix05/tech/general/bellard.html}
}



@manual{optee_docs,
  title     = {OP-TEE Documentation},
  author    = {OP-TEE Project Contributors},
  year      = {2024},
  url       = {https://optee.readthedocs.io/en/latest/},
  note      = {Accessed: December 4, 2024}
}




@online{obrezkov2019xen,
  author    = {Denis Obrezkov},
  title     = {Xen on ARM and QEMU},
  year      = {2019},
  url       = {https://medium.com/@denisobrezkov/xen-on-arm-and-qemu-1654f24dea75}
}

@inproceedings {203678,
author = {Zhichao Hua and Jinyu Gu and Yubin Xia and Haibo Chen and Binyu Zang and Haibing Guan},
title = {{vTZ}: Virtualizing {ARM} {TrustZone}},
booktitle = {26th USENIX Security Symposium (USENIX Security 17)},
year = {2017},
isbn = {978-1-931971-40-9},
address = {Vancouver, BC},
pages = {541--556},
url = {https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/hua},
publisher = {USENIX Association},
month = aug
}



@INPROCEEDINGS{7005255,
  author={Pinto, S. and Oliveira, D. and Pereira, J. and Cardoso, N. and Ekpanyapong, M. and Cabral, J. and Tavares, A.},
  booktitle={Proceedings of the 2014 IEEE Emerging Technology and Factory Automation (ETFA)}, 
  title={Towards a lightweight embedded virtualization architecture exploiting ARM TrustZone}, 
  year={2014},
  volume={},
  number={},
  pages={1-4},
  keywords={Virtualization;Computer architecture;Switches;Monitoring;Hardware;Linux;Real-time systems;Virtualization;TrustZone;Monitor;Real-Time Embedded Systems;ARM},
  doi={10.1109/ETFA.2014.7005255}}


@InProceedings{10.1007/978-3-642-32298-3_1,
author="Winter, Johannes
and Wiegele, Paul
and Pirker, Martin
and T{\"o}gl, Ronald",
editor="Chen, Liqun
and Yung, Moti
and Zhu, Liehuang",
title="A Flexible Software Development and Emulation Framework for ARM TrustZone",
booktitle="Trusted Systems",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="1--15",
abstract="ARM TrustZone is a hardware isolation mechanism to improve software security. Despite its widespread availability in mobile and embedded devices, development of software for it has been hampered by a lack of openly available emulation and development frameworks. In this paper we provide a comprehensive open-source software environment for experiments with ARM TrustZone, based on the foundations of the well known open-source QEMU platform emulator. Our software framework is complemented by a prototype kernel running within a trusted environment. We validate our software environment with an application example featuring a software based Trusted Platform Module hosted in a TrustZone protected runtime environment and an Android operating system accessing it through an high-level, industry-standard Trusted Computing API.",
isbn="978-3-642-32298-3"
}


@INPROCEEDINGS{8352425,
  author={Cicero, Giorgiomaria and Biondi, Alessandro and Buttazzo, Giorgio and Patel, Anup},
  booktitle={2018 IEEE International Conference on Industrial Technology (ICIT)}, 
  title={Reconciling security with virtualization: A dual-hypervisor design for ARM TrustZone}, 
  year={2018},
  volume={},
  number={},
  pages={1628-1633},
  keywords={Virtual machine monitors;Virtualization;Software;Monitoring;Switches;Security;Tools},
  doi={10.1109/ICIT.2018.8352425}}

@inproceedings{10.5555/1247360.1247401,
author = {Bellard, Fabrice},
title = {QEMU, a fast and portable dynamic translator},
year = {2005},
publisher = {USENIX Association},
address = {USA},
abstract = {We present the internals of QEMU, a fast machine emulator using an original portable dynamic translator. It emulates several CPUs (x86, PowerPC, ARM and Sparc) on several hosts (x86, PowerPC, ARM, Sparc, Alpha and MIPS). QEMU supports full system emulation in which a complete and unmodified operating system is run in a virtual machine and Linux user mode emulation where a Linux process compiled for one target CPU can be run on another CPU.},
booktitle = {Proceedings of the Annual Conference on USENIX Annual Technical Conference},
pages = {41},
numpages = {1},
location = {Anaheim, CA},
series = {ATEC '05}
}




@InProceedings{10.1007/978-3-030-22496-7_9,
author="Amacher, Julien
and Schiavoni, Valerio",
editor="Pereira, Jos{\'e}
and Ricci, Laura",
title="On the Performance of ARM TrustZone",
booktitle="Distributed Applications and Interoperable Systems",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="133--151",
abstract="The TrustZone technology, available in the vast majority of recent Arm processors, allows the execution of code inside a so-called secure world. It effectively provides hardware-isolated areas of the processor for sensitive data and code, i.e., a trusted execution environment (TEE). The Op-Tee framework provides a collection of toolchain, open-source libraries and secure kernel specifically geared to develop applications for TrustZone. This paper presents an in-depth performance- and energy-wise study of TrustZone using the Op-Tee framework, including secure storage and the cost of switching between secure and unsecure worlds, using emulated and hardware measurements.",
isbn="978-3-030-22496-7"
}


@article{beleg2009efficient,
  title={Efficient Virtualization on ARM Platforms},
  author={Beleg, Gro{\ss}er},
  year={2009}
}

@article{dissertation,
  title={Emulating Trust zone feature in Android emulator by extending QEMU (Dissertation)},
  author={Muthu, A.},
  year={2013}
}

@inproceedings{10.1145/3426020.3426113,
author = {Yang, Heedong and Lee, Manhee},
title = {Demystifying ARM TrustZone TEE Client API using OP-TEE},
year = {2021},
isbn = {9781450389259},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3426020.3426113},
doi = {10.1145/3426020.3426113},
abstract = {Recently, sensitive information such as financial data and electronic payment systems have been stored in mobile devices. To protect important data, TEE technology has emerged, a trusty and safe execution environment. In particular, ARM TrustZone technology, which is mainly used in mobile, divides one physical processor into Normal World and Secure World to provide a safer execution environment. Many manufacturers have started using TrustZone technology, but existing commercial TEEs have limitations in conducting security research using TrustZone. Therefore, this paper shows how to use OP-TEE which is an open source project for implementing ARM TrustZone technology and TEE Client API that communicates with Trusted Application of TrustZone Secure World. To demystify TEE Client API, we implemented a simple trusted application for communication between Normal World and Secure World in OP-TEE OS using QEMU emulator.},
booktitle = {The 9th International Conference on Smart Media and Applications},
pages = {325–328},
numpages = {4},
keywords = {ARM Processor, OP-TEE, TrustZone, Trusted Execution Environment},
location = {Jeju, Republic of Korea},
series = {SMA 2020}
}

@INPROCEEDINGS{10274941,
  author={Mantu, Radu and Stancu, Florin and Chiroiu, Mihai and Țăpuș, Nicolae},
  booktitle={2023 22nd RoEduNet Conference: Networking in Education and Research (RoEduNet)}, 
  title={Approaches to teaching embedded development}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  keywords={Embedded systems;Conferences;Architecture;Education;Computer architecture;Systems engineering and theory;Hardware;ARM development;Education;Open-Source},
  doi={10.1109/RoEduNet60162.2023.10274941}}


@inproceedings {247658,
author = {Lee Harrison and Hayawardh Vijayakumar and Rohan Padhye and Koushik Sen and Michael Grace},
title = {{PARTEMU}: Enabling Dynamic Analysis of {Real-World} {TrustZone} Software Using Emulation},
booktitle = {29th USENIX Security Symposium (USENIX Security 20)},
year = {2020},
isbn = {978-1-939133-17-5},
pages = {789--806},
url = {https://www.usenix.org/conference/usenixsecurity20/presentation/harrison},
publisher = {USENIX Association},
month = aug
}


@inproceedings{10.1145/3313808.3313810,
author = {Li, Wenhao and Xia, Yubin and Lu, Long and Chen, Haibo and Zang, Binyu},
title = {TEEv: virtualizing trusted execution environments on mobile platforms},
year = {2019},
isbn = {9781450360203},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3313808.3313810},
doi = {10.1145/3313808.3313810},
abstract = {Trusted Execution Environments (TEE) are widely deployed, especially on smartphones. A recent trend in TEE development is the transition from vendor-controlled, single-purpose TEEs to open TEEs that host Trusted Applications (TAs) from multiple sources with independent tasks. This transition is expected to create a TA ecosystem needed for providing stronger and customized security to apps and OS running in the Rich Execution Environment (REE). However, the transition also poses two security challenges: enlarged attack surface resulted from the increased complexity of TAs and TEEs; the lack of trust (or isolation) among TAs and the TEE.  In this paper, we first present a comprehensive analysis on the recent CVEs related to TEE and the need of multiple TEE scheme. We then propose TEEv, a TEE virtualization architecture that supports multiple isolated, restricted TEE instances (i.e., vTEEs) running concurrently. Relying on a tiny hypervisor (we call it TEE-visor), TEEv allows TEE instances from different vendors to run in isolation on the same smartphone and to host their own TAs. Therefore, a compromised vTEE cannot affect its peers or REE; TAs no longer have to run in untrusted/unsuitable TEEs. We have implemented TEEv on a development board and a real smartphone, which runs multiple commercial TEE instances from different vendors with very small porting effort. Our evaluation results show that TEEv can isolate vTEEs and defend all known attacks on TEE with only mild performance overhead.},
booktitle = {Proceedings of the 15th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments},
pages = {2–16},
numpages = {15},
keywords = {Virtualization, TrustZone, TEE, Mobile security},
location = {Providence, RI, USA},
series = {VEE 2019}
}
